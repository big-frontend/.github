<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>big-frontend</title><description>big-frontend</description><link>https://big-frontend.github.io/.github/</link><atom:link href="https://big-frontend.github.io/.github/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><managingEditor>electrolyteJ</managingEditor><docs>https://github.com/big-frontend/.github</docs><language>en</language> <pubDate>Thu, 13 Feb 2025 14:44:15 -0000</pubDate> <lastBuildDate>Thu, 13 Feb 2025 14:44:15 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.11.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>big-frontend</title><link>https://big-frontend.github.io/.github/</link> </image> <item> <title>Index</title> <description>&lt;h1&gt;大前端 👋&lt;/h1&gt;&lt;p&gt;一款跨平台框架必然涉及到两部分，前端与后端，前端为基于js或者dart语言创建的框架，后端为系统平台，提供硬件能力。&lt;/p&gt;&lt;p&gt;占大多数市场的桌面客户端系统有Windows、macOS、Android、iOS，浏览器分为手机浏览器与电脑浏览器，这些客户端统称为大前端，而在这些平台上面又衍生出了微信小程序...&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/</link> <pubDate>Thu, 13 Feb 2025 14:44:15 +0000</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/</guid> </item> <item> <title>Cross-Platform</title> <description>&lt;h2&gt;跨平台框架对比&lt;/h2&gt;&lt;p&gt;跨平台框架\平台 |小程序 |浏览器(browser) |鸿蒙(harmony) | android/ios/window/macos/linux---|---|---|----|---KMP(Compose)| | ✅| | ✅[flutter](https://github....&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/cross_platform/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/cross_platform/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/cross_platform/</guid> </item> <item> <title>Design Patterns</title> <description>&lt;h2&gt;设计模式原则(Design Principle)&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;单一职责(Single responsibility principle,SRP):每个类或者模块应该负责软件提供的功能单一部分&lt;/li&gt;&lt;li&gt;开闭原则(Open/Closed Principle,OCP):对于扩展进行开放，对于内部修改进行关闭。&lt;/li&gt;&lt;li&gt;里氏替换...&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/arch/design_patterns/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/arch/design_patterns/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/arch/design_patterns/</guid> </item> <item> <title>Dynamic</title> <description>&lt;h1&gt;动态化&lt;/h1&gt;&lt;p&gt;随着插件化的落幕，React Native 、小程序、Flutter跨平台框架开始中原逐鹿。&lt;/p&gt;&lt;h2&gt;方案&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Android&lt;ul&gt;&lt;li&gt;插件化：&lt;a href=&#34;https://github.com/Qihoo360/RePlugin&#34;&gt;RePlugin&lt;/a&gt;、aab&lt;/li&gt;&lt;li&gt;热修复：[tinker](https...&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/arch/dynamic/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/arch/dynamic/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/arch/dynamic/</guid> </item> <item> <title>Middleware</title> <description>&lt;p&gt;中间件：账号模块(登录、支付、分享)、im模块、升级模块、二维码模块、网络监控模块&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/arch/middleware/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/arch/middleware/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/arch/middleware/</guid> </item> <item> <title>Module Evolution</title> <description>&lt;h1&gt;模块演进(Module Evolution)&lt;/h1&gt;&lt;p&gt;早期开发对于应用的来说只要一个模块就足以应付一切，代码通过分包的形式按照单一原则拆分网络、存储等包。随着人员增多，代码量膨胀，分包的形式变成了分模块，一些基础能力被下沉到模块中，比如网络、存储这样的基础能力。当团队的规模来到了百人，代码量急剧庞大，并行的业务团队...&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/arch/module_evolution/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/arch/module_evolution/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/arch/module_evolution/</guid> </item> <item> <title>Index</title> <description>&lt;h1&gt;DevOps&lt;/h1&gt;&lt;p&gt;work flow : code -&amp;gt; test -&amp;gt; deploy -&amp;gt; ops&lt;/p&gt;&lt;h2&gt;产品迭代模式/项目管理&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;瀑布流式&lt;/li&gt;&lt;li&gt;敏捷开发&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;像gitlab/github这样的平台都是兼具代码管理、代码审核、任务管理、文档维护的功能，而早期这些能力都是分散的不在一个平台上，比如代码审核有...&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/devops/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/devops/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/devops/</guid> </item> <item> <title>Code</title> <description>&lt;h1&gt;1.代码设计(code design)&lt;/h1&gt;&lt;h1&gt;2.开发(coding)&lt;/h1&gt;&lt;h2&gt;构建&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Android&lt;ul&gt;&lt;li&gt;Gradle&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;React Native&lt;ul&gt;&lt;li&gt;Metro&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;React&lt;ul&gt;&lt;li&gt;Webpack/Vite/Rollup&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;效率工具&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;intellij插件开发...&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/devops/code/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/devops/code/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/devops/code/</guid> </item> <item> <title>Requirements</title> <description></description><link>https://big-frontend.github.io/.github/devops/requirement/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/devops/requirement/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/devops/requirement/</guid> </item> <item> <title>Verify</title> <description>&lt;p&gt;需求验证&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/devops/verify/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/devops/verify/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/devops/verify/</guid> </item> <item> <title>Index</title> <description>&lt;h2&gt;Performance(Profiling、Optimization、Monitoring )&lt;/h2&gt;&lt;p&gt;性能有业务与技术之分，业务性能我们能肉眼感知到的，技术性能就比较底层，一个业务性能的问题产生往往是由多个技术性能排列组合而成，比如卡顿，其产生原因有慢函数、内存泄漏、网络延时等构成。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;业务性能：&lt;code&gt;卡顿&lt;/code&gt; ...&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/perf/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/</guid> </item> <item> <title>Cpu</title> <description>&lt;h1&gt;CPU&lt;/h1&gt;&lt;p&gt;Tracer是trace cpu工具的统称，可用来分析卡顿、启动、渲染问题，帮忙我们快速找出慢函数。&lt;/p&gt;&lt;h2&gt;术语&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;wall duration:函数执行时间(包含等待时间)，函数wall时间 = 运行时间+其他时间(阻塞(io、加锁)、就绪等情况)&lt;/li&gt;&lt;li&gt;wall self time:函数执行时...&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/perf/cpu/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/cpu/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/cpu/</guid> </item> <item> <title>Network</title> <description>&lt;h1&gt;网络(Network)&lt;/h1&gt;&lt;h2&gt;参考资料&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.trinea.cn/android/mobile-performance-optimization/&#34;&gt;移动端网络优化&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;[Android界面性能调优手册](https://androidtest.org/android-graph...&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/perf/net/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/net/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/net/</guid> </item> <item> <title>包体积(App Size)</title> <description>&lt;h1&gt;包体积(App Size)&lt;/h1&gt;&lt;ul&gt;&lt;li&gt;Android包:模块、dex、资源、so&lt;/li&gt;&lt;li&gt;js bundle:js.bundle &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;好处&lt;/p&gt;&lt;ul&gt;&lt;li&gt;提高下载转化率&lt;/li&gt;&lt;li&gt;减少rom占用&lt;/li&gt;&lt;li&gt;优化运行时内存占用&lt;/li&gt;&lt;li&gt;缩短apk安装时间&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/perf/appsize/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/appsize/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/appsize/</guid> </item> <item> <title>Android</title> <description>&lt;h1&gt;Android App Size&lt;/h1&gt;&lt;h2&gt;分析 &amp;amp; 优化&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/matrix/wiki/Matrix-Android-ApkChecker&#34;&gt;Matrix-Android-ApkChecker分析工具&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;拆包&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;动态下发(replugin、a...&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/perf/appsize/android/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/appsize/android/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/appsize/android/</guid> </item> <item> <title>React Native</title> <description>&lt;h1&gt;React Native App Size&lt;/h1&gt;&lt;h2&gt;分析 &amp;amp; 优化&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/IjzerenHein/react-native-bundle-visualizer&#34;&gt;react-native-bundle-visualizer分析工具&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;React Native分包(...&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/perf/appsize/reactnative/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/appsize/reactnative/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/appsize/reactnative/</guid> </item> <item> <title>卡顿(Jank)</title> <description>&lt;h1&gt;卡顿(Jank)&lt;/h1&gt;&lt;p&gt;每秒帧数(帧率,60fps) 或者每帧耗时(16ms/frame)都可以用来衡量应用的流畅度。&lt;/p&gt;&lt;h2&gt;指标&lt;/h2&gt;&lt;p&gt;Vitals提供指标(指标存疑，[Tracking jank](https://developer.android.com/topic/performance/vitals/tr...&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/perf/jank/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/jank/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/jank/</guid> </item> <item> <title>Android</title> <description>&lt;h2&gt;分析 &amp;amp; 优化&lt;/h2&gt;&lt;p&gt;卡顿的场景比较多启动卡顿、页面切换卡顿、列表卡顿、执行动画卡顿等，而造成卡顿的原因有很多，比如内存不足触发频繁gc导致主线程阻塞(内存问题)；启动过程中存在慢函数或者锁等待(启动问题)；ui布局层级深或者过度重绘(渲染问题)。内存问题就是用mat等工具分析内存情况，启动问题就用trace...&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/perf/jank/android/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/jank/android/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/jank/android/</guid> </item> <item> <title>React Native</title> <description>&lt;h2&gt;监控&lt;/h2&gt;&lt;p&gt;计算ChoreographerCompat.FrameCallback两次时间差：react natvie平台提供的FpsView。react native提供监控js thread 与 ui thread帧率指标类FpsView，每次500ms就会重新从FpsDebugFrameCallback获...&lt;/p&gt;</description><link>https://big-frontend.github.io/.github/perf/jank/reactnative/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/jank/reactnative/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/jank/reactnative/</guid> </item> <item> <title>内存(Memory)</title> <description>&lt;h1&gt;内存(Memory)&lt;/h1&gt;&lt;p&gt;为什么要做内存分析 ？ 当内存不足会造成异常(oom,内存分配失败，llk,设备重启等)与卡顿(触发频繁的gc)，而出现内存不足的原因有很多比如内存泄漏，为了减少oom与卡顿这个时候就需要分析内存从中找出优化点&lt;/p&gt;&lt;h2&gt;虚拟机/引擎&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Android：art&lt;/li&gt;&lt;li&gt;React Nati...&lt;/li&gt;&lt;/ul&gt;</description><link>https://big-frontend.github.io/.github/perf/mem/</link> <pubDate>Thu, 13 Feb 2025 14:43:38 +0800</pubDate><source url="https://big-frontend.github.io/.github/feed_rss_updated.xml">big-frontend</source><comments>https://big-frontend.github.io/.github/perf/mem/#__comments</comments><guid isPermaLink="true">https://big-frontend.github.io/.github/perf/mem/</guid> </item> </channel></rss>